{"version":3,"sources":["components/Person.js","services/persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","components/Persons.js","App.js","index.js"],"names":["Person","person","handleDeleteClick","name","number","onClick","baseURL","axios","get","then","response","data","newObject","post","id","delete","Filter","filterLabel","handleSearchChange","onChange","PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","onSubmit","value","placeholder","type","Notification","message","colorErrorMessage","className","Persons","persons","Header","title","App","useState","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","showAll","setShowAll","errorMessage","setErrorMessage","setColorErrorMessage","useEffect","personService","initialPersons","personToShow","filter","toLowerCase","indexOf","findPersonToDelete","find","afterDeleteRemainingPerson","setTimeout","event","target","preventDefault","personObject","returnedPerson","concat","catch","error","map","key","ReactDOM","render","document","getElementById"],"mappings":"mNAWeA,EATA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,kBACtB,OACG,6BACMD,EAAOE,KADb,IACoBF,EAAOG,OACtB,4BAAQC,QAASH,GAAjB,Y,gBCLNI,EAAU,eAuBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADiBL,IAAMM,KAAKP,EAASM,GACtBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAJC,SAACG,EAAIF,GACjB,OAAOL,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,GAAMF,ICX7BI,EARA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,mBAC3B,OACE,6BACA,2BAAID,EAAJ,IAAiB,2BAAOE,SAAUD,OCazBE,EAhBI,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,mBAAoBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACrE,OACE,0BAAMC,SAAUL,GAChB,sCACQ,2BAAOM,MAAOL,EAASH,SAAUI,KAEzC,wCACU,2BAAOI,MAAOH,EAAWL,SAAUM,EAAoBG,YAAY,kBAE7E,6BACE,4BAAQC,KAAK,UAAb,UCEOC,EAZM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,kBAC7B,OAAgB,OAAZD,EACK,KAGP,yBAAKE,UAAWD,GACbD,ICCMG,EAPC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACE,6BAAMA,ICINC,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,4BAAKA,IAqJMC,EAjJH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRJ,EADQ,KACCK,EADD,OAIgBD,mBAAS,IAJzB,mBAIRjB,EAJQ,KAICmB,EAJD,OAKoBF,mBAAS,IAL7B,mBAKRf,EALQ,KAKGkB,EALH,OAMoBH,mBAAS,IAN7B,mBAMRI,EANQ,KAMGC,EANH,OAOcL,oBAAS,GAPvB,mBAOTM,EAPS,KAOAC,EAPA,OAQwBP,mBAAS,MARjC,mBAQTQ,EARS,KAQKC,EARL,OASkCT,mBAAS,IAT3C,mBASTP,EATS,KASUiB,EATV,KAYhBC,qBAAU,WACRC,IAEG1C,MAAK,SAAA2C,GACJZ,EAAWY,QAEd,IAMH,IAAMC,EAAeR,EACjBV,EACAA,EAAQmB,QAAO,SAAArD,GAAM,OAAoE,IAAhEA,EAAOE,KAAKoD,cAAcC,QAAQb,EAAUY,kBAoFnErD,EAAoB,SAAAY,GAEzB,IAAM2C,EAAqBtB,EAAQuB,MAAK,SAAAzD,GAAM,OAAIA,EAAOa,KAAOA,KAChEqC,EACYM,EAAmB3C,GAAI2C,GAC/BhD,MAAK,WACJ,IAAMkD,EAA6BxB,EAAQmB,QAAO,SAAArD,GAAM,OAAIA,EAAOa,KAAO2C,EAAmB3C,MAG9FkC,EAAgB,UAAD,OACJS,EAAmBtD,KADf,qBAGhB8C,EAAqB,YACrBW,YAAW,WACTZ,EAAgB,QACf,KACHR,EAAWmB,GACXlB,EAAW,IACXC,EAAa,QAIjB,OACE,6BACE,kBAAC,EAAD,CAAQL,MAAO,cACf,kBAAC,EAAD,CAAcN,QAASgB,EAAcf,kBAAmBA,IACxD,kBAAC,EAAD,CAAQf,YAAa,oBAAqBC,mBA9BnB,SAAC2C,GAC1BjB,EAAaiB,EAAMC,OAAOnC,OAC1BmB,GAAW,MA6BT,kBAAC,EAAD,CAAQT,MAAO,cACf,kBAAC,EAAD,CAAYhB,UAxGE,SAACwC,GACjBA,EAAME,iBAEN,IAAMC,EAAe,CACnB7D,KAAMmB,EACNlB,OAAQoB,GAKR2B,EACUa,GACPvD,MAAK,SAAAwD,GAEFjB,EAAgB,SAAD,OACJgB,EAAa7D,KADT,mBAGf8C,EAAqB,SACrBW,YAAW,WACTZ,EAAgB,QACf,KACHR,EAAWL,EAAQ+B,OAAOD,IAC1BxB,EAAW,IACXC,EAAa,OA0BjByB,OAAM,SAAAC,GAGLpB,EAAgB,IAAD,OAAMoB,EAAM1D,SAASC,KAAhB,QACpBsC,EAAqB,YACrBW,YAAW,WACVZ,EAAgB,QACb,KACHR,EAAWL,GACXM,EAAW,IACXC,EAAa,QA6CiBpB,QAASA,EAASC,mBAvC7B,SAACsC,GAE1BpB,EAAWoB,EAAMC,OAAOnC,QAqCsEH,UAAWA,EAAWC,mBAnC3F,SAACoC,GAC1BnB,EAAamB,EAAMC,OAAOnC,UAmCxB,kBAAC,EAAD,CAAQU,MAAO,YACf,kBAAC,EAAD,CAASF,QAhHMkB,EAAagB,KAAI,SAAApE,GAAM,OACtC,kBAAC,EAAD,CACGqE,IAAKrE,EAAOE,KACZF,OAAQA,EAAQC,kBAAmB,kBAAMA,EAAkBD,EAAOa,c,MCvC3EyD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3bcee08f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, handleDeleteClick }) => {\n    return (\n       <div>\n            {person.name} {person.number} \n            <button onClick={handleDeleteClick}>delete</button>\n        </div>\n        \n    )\n}\nexport default Person","import axios from 'axios'\nconst baseURL = '/api/persons'\n//const baseURL = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request =  axios.post(baseURL, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject)\n    return request.then(response => response.data)\n\n}\n\nconst deletes = (id, newObject) => {\n    return axios.delete(`${baseURL}/${id}`, newObject)\n}\n\nexport default { getAll, create, update, deletes}","import React from 'react'\n\nconst Filter = ({ filterLabel, handleSearchChange }) => {\n    return(\n      <div>\n      <p>{filterLabel} <input onChange={handleSearchChange} /></p>\n      </div>\n    )\n  }\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handlePersonChange, newNumber, handleNumberChange }) => {\n    return (\n      <form onSubmit={addPerson}> \n      <div>\n        name: <input value={newName} onChange={handlePersonChange}/>\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} placeholder=\"xxx-xxx-xx..\" />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n    )\n  }\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, colorErrorMessage }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className={colorErrorMessage}>\n        {message}\n      </div>\n  \n    )\n  }\n\nexport default Notification","import React from 'react'\n\nconst Persons = ({ persons }) => {\n    return(\n      <div>{persons}</div>\n    )\n  }\n  \n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\n\nconst Header = ({ title }) => {\n  return(\n    <h2>{title}</h2>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    /*{ name: 'Arto Hellas', number: '22-33-4567' },{ name: 'sina', number: '33-22-7654' }*/\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [colorErrorMessage, setColorErrorMessage] = useState('')\n\n  // Fetching data from server\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  // filter the person array => convert name of each person element to lowercase\n  // The index of the first occurrence of searchValue, or -1 if not found\n  // Note: The indexOf() method is case sensitive. For example, the following expression returns -1:\n  // 'Blue Whale'.indexOf('blue'); // returns -1\n  const personToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().indexOf(newSearch.toLowerCase()) !== -1)\n\n  const rows = () => personToShow.map(person =>\n      <Person \n         key={person.name}\n         person={person} handleDeleteClick={() => handleDeleteClick(person.id)}\n      />\n    )\n  const addPerson = (event) => {\n    event.preventDefault()\n  //  console.log('adding person button clicked', event.target)\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n   // const findPersonDuplicate = persons.find(person => person.name.toLowerCase() === personObject.name.toLowerCase())\n    //console.log('ispersonduplicate', findPersonDuplicate)\n    //if (findPersonDuplicate === undefined) {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n            //alert(`Added ${personObject.name} to phonebook.`)\n            setErrorMessage(\n              `Added ${personObject.name} to phonebook.`\n            )\n            setColorErrorMessage('error')\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n      })\n      /*\n          }\n          else {\n            personService \n              .update(findPersonDuplicate.id, personObject)\n              .then(() => {\n                persons.find(person => person.name.toLowerCase() === personObject.name.toLowerCase()).number = personObject.number\n              // alert(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n              setErrorMessage(\n                `${personObject.name} is already added to phonebook, replace the old number with a new one?`\n                )\n              setColorErrorMessage('error')\n              setTimeout(() => {\n                setErrorMessage(null)\n                }, 5000)\n                setPersons(persons)\n              // console.log('update person', persons)\n                setNewName('')\n                setNewNumber('')\n              })\n          alert(`${newName} is already added to phonebook`)\n          setPersons(persons)*/\n\n\n       .catch(error => {\n         //alert(`note has been deleted`)\n        // console.log(error.response.data)\n         setErrorMessage(` ${(error.response.data)['error']}`)\n         setColorErrorMessage('errorRed')\n         setTimeout(() => {\n          setErrorMessage(null)\n          }, 5000)\n          setPersons(persons)\n          setNewName('')\n          setNewNumber('')\n\n       })\n    } \n  //}\n\n  const handlePersonChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value) \n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n    setShowAll(false)\n  }\n  const handleDeleteClick = id => {\n   // console.log('delete is pressed')\n   const findPersonToDelete = persons.find(person => person.id === id)\n   personService\n      .deletes(findPersonToDelete.id, findPersonToDelete)\n      .then(() => {\n        const afterDeleteRemainingPerson = persons.filter(person => person.id !== findPersonToDelete.id)\n       // console.log('after delete remaining person', afterDeleteRemainingPerson)\n       // alert(`Delete ${findPersonToDelete.name} ?`)\n       setErrorMessage(\n        `Delete ${findPersonToDelete.name} from phonebook.`\n      )\n      setColorErrorMessage('errorRed')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setPersons(afterDeleteRemainingPerson)\n      setNewName('')\n      setNewNumber('')\n      })\n  }\n  \n  return (\n    <div>\n      <Header title={'Phonebook'} />\n      <Notification message={errorMessage} colorErrorMessage={colorErrorMessage} />\n      <Filter filterLabel={'filter show with:'} handleSearchChange={handleSearchChange}/>\n      <Header title={'add a new'} />\n      <PersonForm addPerson={addPerson} newName={newName} handlePersonChange={handlePersonChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <Header title={'Numbers'} />\n      <Persons persons={rows()} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n"],"sourceRoot":""}